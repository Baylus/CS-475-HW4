=================================================
Output of Building User Code
Exploding tar files
20190326012755-tunn4356-CS475-S19-A4.tar
pca.cpp
mat.cpp
rand.cpp
randf.cpp
randmt.cpp
mat.h
rand.h
makefile

Undossing tarred files assumes all files are ascii and not binary

Extracting test files
ZTESTS/
ZTESTS/._abbeyRoadAlbumCover.ppm
ZTESTS/abbeyRoadAlbumCover.ppm
ZTESTS/._girlWithPearlEarringJohansson.pgm
ZTESTS/girlWithPearlEarringJohansson.pgm
ZTESTS/mat.h
ZTESTS/._girlWithPearlEarringSm.pgm
ZTESTS/girlWithPearlEarringSm.pgm
ZTESTS/picdist.cpp
ZTESTS/._girlWithPearlEarringJohanssonSm.ppm
ZTESTS/girlWithPearlEarringJohanssonSm.ppm
ZTESTS/._mondrianRedBlueAndYellow.ppm
ZTESTS/mondrianRedBlueAndYellow.ppm
ZTESTS/._girlWithPearlEarringJohanssonSm.pgm
ZTESTS/girlWithPearlEarringJohanssonSm.pgm
ZTESTS/._girlWithPearlEarringSm.ppm
ZTESTS/girlWithPearlEarringSm.ppm
ZTESTS/rand.cpp
ZTESTS/._girlWithPearlEarringJohansson.ppm
ZTESTS/girlWithPearlEarringJohansson.ppm
ZTESTS/._abbeyRoadAlbumCover.pgm
ZTESTS/abbeyRoadAlbumCover.pgm
ZTESTS/._mtest.ppm
ZTESTS/mtest.ppm
ZTESTS/mat.cpp
ZTESTS/rand.h
ZTESTS/._marslandBook.ppm
ZTESTS/marslandBook.ppm
ZTESTS/._mondrianRedBlueAndYellow.pgm
ZTESTS/mondrianRedBlueAndYellow.pgm

build picture comparator

Remove Tmp dir contents

Remove the code you are about to make, if it is there

Making your software by running make.
This assumes you have a file named makefile or Makefile.
g++  -O3 -Wall  -c -o mat.o mat.cpp
g++  -O3 -Wall  -c -o rand.o rand.cpp
g++  -O3 -Wall  -c -o pca.o pca.cpp
g++ -O3 -Wall mat.o rand.o pca.o -lm -o pca

was a program called pca built?
-rwxr-xr-x. 1 rs-cs-heckendo domain_users 128408 Mar 26 01:28 pca

END OF BUILD
=================================================
Complete Output of Testing
Limited to 80 seconds total run time and 2000 lines of output

* ================================================ *
|      Tests for CS475 Assignment 4                |
* ================================================ *

=================================
pca 10 < girlWithPearlEarringSm.pgm
(size of Image: 300 X 256)
(size of Mean: 1 X 256)
(size of EigenVectors: 256 X 256)
(size of EigenValues: 1 X 256)
(size of Encoded: 300 X 10)
(size of Decoded: 300 X 256)
Per Pixel Dist^2: 130.028

picdist z.pgm girlWithPearlEarringSm.pgm
DIST2/pixel:   121.11

=================================
pca 100 < girlWithPearlEarringSm.pgm
(size of Image: 300 X 256)
(size of Mean: 1 X 256)
(size of EigenVectors: 256 X 256)
(size of EigenValues: 1 X 256)
(size of Encoded: 300 X 100)
(size of Decoded: 300 X 256)
Per Pixel Dist^2: 0.939007

picdist z.pgm girlWithPearlEarringSm.pgm
DIST2/pixel:     1.01

=================================
pca 10 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)
(size of Mean: 1 X 600)
(size of EigenVectors: 600 X 600)
(size of EigenValues: 1 X 600)
(size of Encoded: 203 X 10)
(size of Decoded: 203 X 600)
Per Pixel Dist^2: 5.52174

picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel:     5.83

=================================
pca -10 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)
(size of Mean: 1 X 600)
(size of EigenVectors: 600 X 600)
(size of EigenValues: 1 X 600)
(size of Encoded: 203 X 152)
(size of Decoded: 203 X 600)
Per Pixel Dist^2: 0.0480186

picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel:     0.50

=================================
pca 100 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)
(size of Mean: 1 X 600)
(size of EigenVectors: 600 X 600)
(size of EigenValues: 1 X 600)
(size of Encoded: 203 X 100)
(size of Decoded: 203 X 600)
Per Pixel Dist^2: 0.244148

picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel:     0.60
=================================
END OF TESTS
kill all remaining processes
nn: no process found
=================================================
Output Comparison
ztest zexpected differ: char 1292, line 48

Your output differs from the expected output.
digits in the day and time were changed to # for comparison.
This is a two column comparison with YOUR OUTPUT ON THE LEFT
with the EXPECTED OUTPUT ON THE RIGHT.

NOTE: In the case of stochastic algorithms like Neural Network training
we can only expect that you will be qualitatively the same.  You
should hand check that your output seems reasonable.
Limited to 80 seconds total run time and 2000 lines of o	Limited to 80 seconds total run time and 2000 lines of o

* ================================================ *		* ================================================ *
| Tests for CS475 Assignment 4 |				| Tests for CS475 Assignment 4 |
* ================================================ *		* ================================================ *

=================================				=================================
pca 10 < girlWithPearlEarringSm.pgm				pca 10 < girlWithPearlEarringSm.pgm
(size of Image: 300 X 256)					(size of Image: 300 X 256)
(size of Mean: 1 X 256)						(size of Mean: 1 X 256)
(size of EigenVectors: 256 X 256)				(size of EigenVectors: 256 X 256)
(size of EigenValues: 1 X 256)					(size of EigenValues: 1 X 256)
(size of Encoded: 300 X 10)					(size of Encoded: 300 X 10)
(size of Decoded: 300 X 256)					(size of Decoded: 300 X 256)
Per Pixel Dist^2: 130.028					Per Pixel Dist^2: 130.028

picdist z.pgm girlWithPearlEarringSm.pgm			picdist z.pgm girlWithPearlEarringSm.pgm
DIST2/pixel: 121.11						DIST2/pixel: 121.11

=================================				=================================
pca 100 < girlWithPearlEarringSm.pgm				pca 100 < girlWithPearlEarringSm.pgm
(size of Image: 300 X 256)					(size of Image: 300 X 256)
(size of Mean: 1 X 256)						(size of Mean: 1 X 256)
(size of EigenVectors: 256 X 256)				(size of EigenVectors: 256 X 256)
(size of EigenValues: 1 X 256)					(size of EigenValues: 1 X 256)
(size of Encoded: 300 X 100)					(size of Encoded: 300 X 100)
(size of Decoded: 300 X 256)					(size of Decoded: 300 X 256)
Per Pixel Dist^2: 0.939007					Per Pixel Dist^2: 0.939007

picdist z.pgm girlWithPearlEarringSm.pgm			picdist z.pgm girlWithPearlEarringSm.pgm
DIST2/pixel: 1.01						DIST2/pixel: 1.01

=================================				=================================
pca 10 < mondrianRedBlueAndYellow.ppm				pca 10 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)					(size of Image: 203 X 600)
(size of Mean: 1 X 600)						(size of Mean: 1 X 600)
(size of EigenVectors: 600 X 600)				(size of EigenVectors: 600 X 600)
(size of EigenValues: 1 X 600)					(size of EigenValues: 1 X 600)
(size of Encoded: 203 X 10)					(size of Encoded: 203 X 10)
(size of Decoded: 203 X 600)					(size of Decoded: 203 X 600)
Per Pixel Dist^2: 5.52174					Per Pixel Dist^2: 5.52174

picdist z.ppm mondrianRedBlueAndYellow.ppm			picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel: 5.83						DIST2/pixel: 5.83

=================================				=================================
pca -10 < mondrianRedBlueAndYellow.ppm				pca -10 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)				   |	(size of Image: 600 X 203)
(size of Mean: 1 X 600)					   |	(size of Mean: 1 X 203)
(size of EigenVectors: 600 X 600)			   |	(size of EigenVectors: 203 X 203)
(size of EigenValues: 1 X 600)				   |	(size of EigenValues: 1 X 203)
(size of Encoded: 203 X 152)				   |	(size of Encoded: 600 X 10)
(size of Decoded: 203 X 600)				   |	(size of Decoded: 600 X 203)
Per Pixel Dist^2: 0.0480186				   |	Per Pixel Dist^2: 5.78364

picdist z.ppm mondrianRedBlueAndYellow.ppm			picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel: 0.50					   |	DIST2/pixel: 6.11

=================================				=================================
pca 100 < mondrianRedBlueAndYellow.ppm				pca 100 < mondrianRedBlueAndYellow.ppm
(size of Image: 203 X 600)					(size of Image: 203 X 600)
(size of Mean: 1 X 600)						(size of Mean: 1 X 600)
(size of EigenVectors: 600 X 600)				(size of EigenVectors: 600 X 600)
(size of EigenValues: 1 X 600)					(size of EigenValues: 1 X 600)
(size of Encoded: 203 X 100)					(size of Encoded: 203 X 100)
(size of Decoded: 203 X 600)					(size of Decoded: 203 X 600)
Per Pixel Dist^2: 0.244148					Per Pixel Dist^2: 0.244148

picdist z.ppm mondrianRedBlueAndYellow.ppm			picdist z.ppm mondrianRedBlueAndYellow.ppm
DIST2/pixel: 0.60						DIST2/pixel: 0.60
=================================				=================================
